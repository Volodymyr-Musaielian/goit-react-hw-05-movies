{"version":3,"file":"static/js/349.4a07d7b1.chunk.js","mappings":"qPACA,EAA2B,4B,SCGdA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,+BACE,kBAAMH,SATW,SAAAI,GACnBA,EAAMC,iBAENL,EAASE,EAAMI,QACfH,EAAS,GACV,EAIiCI,UAAWC,EAAzC,WACE,kBAAOC,KAAK,OAAOP,MAAOA,EAAOQ,SAdlB,SAAAN,GACnBD,EAASC,EAAMO,OAAOT,MACvB,KAaK,mBAAQO,KAAK,SAAb,wBAIP,E,SCxBYG,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,ECmDD,EAzDmB,WAAO,IAAD,EACvB,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOY,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBxB,EAAAA,EAAAA,UAAS,GAAjC,eAAOyB,EAAP,KAAaC,EAAb,KAGMC,EAAK,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,uFACR,KAAVH,EADkB,0CAGSI,EAAAA,GAAsBJ,EAAOF,GAHtC,OAGZO,EAHY,OAIlBX,EAAUW,GAJQ,yGAAH,qDAQrBF,GACD,GAAE,CAACH,EAAOF,IAQX,OACE,4BACE,SAAC3B,EAAD,CAAWC,SARU,SAAA4B,GACvBH,EAAgB,CAAEG,MAAAA,IAClBN,EAAU,IACVK,EAAQ,EACT,IAKsB,IAAlBd,EAAOqB,SAAgB,SAACtB,EAAD,CAAcC,OAAQA,MAGnD,C,+LCvCDsB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,mCACOC,EADP,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOb,EAAOF,GAAd,uFACRS,EAAAA,EAAAA,IAAA,+BACGC,EADH,sCACwCR,EADxC,gCACqEF,IAF7D,cACzBY,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBE,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBK,EAAc,mCAAG,WAAMD,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,KAAKM,MAJO,2CAAH,sDAOdC,EAAgB,mCAAG,WAAMH,GAAN,uFACPR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/MoviesResult/MoviesResult.jsx","pages/MoviesPage/MoviesPage.jsx","pages/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"seachbar\":\"Searchbar_seachbar__iART+\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from '../Searchbar/Searchbar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(value.trim());\n    setValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.seachbar}>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesResult = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport * as API from '../services/api';\nimport PropTypes from 'prop-types';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesResult } from 'components/MoviesResult/MoviesResult';\n// import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  // const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getSearchMovies = async () => {\n      if (query !== '') {\n        try {\n          const searchMovies = await API.fetchSearchMovies(query, page);\n          setMovies(searchMovies);\n        } catch (error) {}\n      }\n    };\n    getSearchMovies();\n  }, [query, page]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setMovies([]);\n    setPage(1);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {movies.length !== 0 && <MoviesResult movies={movies} />}\n    </div>\n  );\n};\n\n// const updateQueryString = evt => {\n//   const movieNameValue = evt.target.value;\n//   if (movieNameValue === '') {\n//     return setSearchParams({});\n//   }\n//   setSearchParams({ query: movieNameValue });\n// };\n\n// const updateQueryString = query => {\n//   const nextParams = query !== '' ? { query } : {};\n//   setSearchParams(nextParams);\n// };\n\nMoviesPage.propTypes = {\n  filteredMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86b406e522b33bfd5050d3d09fcff0b';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&query=${query}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["Searchbar","onSubmit","useState","value","setValue","event","preventDefault","trim","className","css","type","onChange","target","MoviesResult","movies","location","useLocation","map","id","title","to","state","from","setMovies","useSearchParams","searchParams","setSearchParams","page","setPage","query","get","useEffect","getSearchMovies","API","searchMovies","length","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReview"],"sourceRoot":""}