{"version":3,"file":"static/js/186.7317e947.chunk.js","mappings":"yNAwDA,UAlDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,6GAEGC,EAAAA,GAAqBT,GAFxB,OAEbG,EAFa,OAGnBC,EAAWD,GACXG,GAAa,GAJM,gDAMnBA,GAAa,GANM,yDAAH,qDASpBE,GACD,GAAE,CAACR,KAGF,yBACGK,GACC,uCAEA,wBACsB,IAAnBF,EAAQO,QACP,oEAEAP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADC,OAWvB,C,+LC1CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,mCACOC,EADP,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRR,EAAAA,EAAAA,IAAA,+BACGC,EADH,sCACwCM,EADxC,gCACqEC,IAF7D,cACzBL,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBI,EAAiB,mCAAG,WAAMxB,GAAN,uFACRe,EAAAA,EAAAA,IAAA,gBACZf,EADY,oBACOgB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAc,mCAAG,WAAMzB,GAAN,uFACLe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOdC,EAAgB,mCAAG,WAAM3B,GAAN,uFACPe,EAAAA,EAAAA,IAAA,gBACZf,EADY,4BACegB,EADf,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","pages/services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../pages/services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getReviewMovie = async () => {\n      try {\n        const reviews = await API.fetchMovieReview(movieId);\n        setReviews(reviews);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n      }\n    };\n    getReviewMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {reviews.length === 0 ? (\n            <p>We don't have any reviews for this movie</p>\n          ) : (\n            reviews.map(({ author, content, id }) => (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n              </li>\n            ))\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86b406e522b33bfd5050d3d09fcff0b';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&query=${query}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getReviewMovie","API","length","map","author","content","id","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","page","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReview"],"sourceRoot":""}