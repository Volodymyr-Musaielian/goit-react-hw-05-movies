{"version":3,"file":"static/js/247.0d915676.chunk.js","mappings":"yNAkDA,UA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6GAEGC,EAAAA,GAAmBP,GAFtB,OAEZG,EAFY,OAGlBC,EAAUD,GAHQ,uGAAH,qDAMnBG,GACD,GAAE,CAACN,KAGF,0BACE,wBACGG,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACV,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAM,SAER,uBAAIJ,KACJ,uCAAeC,OAPRH,EADC,OAcnB,C,+LCnCDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,mCACOC,EADP,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,uFACRR,EAAAA,EAAAA,IAAA,+BACGC,EADH,sCACwCM,EADxC,gCACqEC,IAF7D,cACzBL,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBI,EAAiB,mCAAG,WAAMzB,GAAN,uFACRgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,oBACOiB,EADP,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAc,mCAAG,WAAM1B,GAAN,uFACLgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOdC,EAAgB,mCAAG,WAAM5B,GAAN,uFACPgB,EAAAA,EAAAA,IAAA,gBACZhB,EADY,4BACeiB,EADf,oBADO,cACxBE,EADwB,yBAIvBA,EAASC,KAAKC,SAJS,2CAAH,qD","sources":["components/Cast/Cast.jsx","pages/services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from '../../pages/services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    const getActorMovie = async () => {\n      try {\n        const actors = await API.fetchMovieCast(movieId);\n        setActors(actors);\n      } catch (error) {}\n    };\n    getActorMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {actors.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n              width=\"200\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      character: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c86b406e522b33bfd5050d3d09fcff0b';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&query=${query}&language=en-US&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","actors","setActors","useEffect","getActorMovie","API","map","id","profile_path","name","character","src","alt","width","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchSearchMovies","query","page","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReview"],"sourceRoot":""}